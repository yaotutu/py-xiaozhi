# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import voice_service_pb2 as voice__service__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in voice_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class VoiceServiceStub(object):
    """语音服务定义
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartRecording = channel.unary_unary(
                '/voice.VoiceService/StartRecording',
                request_serializer=voice__service__pb2.Empty.SerializeToString,
                response_deserializer=voice__service__pb2.RecordingResponse.FromString,
                _registered_method=True)
        self.StopRecording = channel.unary_unary(
                '/voice.VoiceService/StopRecording',
                request_serializer=voice__service__pb2.Empty.SerializeToString,
                response_deserializer=voice__service__pb2.RecordingResponse.FromString,
                _registered_method=True)
        self.GetStatus = channel.unary_unary(
                '/voice.VoiceService/GetStatus',
                request_serializer=voice__service__pb2.Empty.SerializeToString,
                response_deserializer=voice__service__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.SubscribeStatus = channel.unary_stream(
                '/voice.VoiceService/SubscribeStatus',
                request_serializer=voice__service__pb2.Empty.SerializeToString,
                response_deserializer=voice__service__pb2.StatusUpdate.FromString,
                _registered_method=True)
        self.SubscribeTextMessages = channel.unary_stream(
                '/voice.VoiceService/SubscribeTextMessages',
                request_serializer=voice__service__pb2.Empty.SerializeToString,
                response_deserializer=voice__service__pb2.TextMessage.FromString,
                _registered_method=True)


class VoiceServiceServicer(object):
    """语音服务定义
    """

    def StartRecording(self, request, context):
        """开始录音
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopRecording(self, request, context):
        """停止录音
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStatus(self, request, context):
        """获取状态
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeStatus(self, request, context):
        """订阅状态流（服务端推送）
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeTextMessages(self, request, context):
        """订阅文本消息流（服务端推送）
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VoiceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartRecording': grpc.unary_unary_rpc_method_handler(
                    servicer.StartRecording,
                    request_deserializer=voice__service__pb2.Empty.FromString,
                    response_serializer=voice__service__pb2.RecordingResponse.SerializeToString,
            ),
            'StopRecording': grpc.unary_unary_rpc_method_handler(
                    servicer.StopRecording,
                    request_deserializer=voice__service__pb2.Empty.FromString,
                    response_serializer=voice__service__pb2.RecordingResponse.SerializeToString,
            ),
            'GetStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatus,
                    request_deserializer=voice__service__pb2.Empty.FromString,
                    response_serializer=voice__service__pb2.StatusResponse.SerializeToString,
            ),
            'SubscribeStatus': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeStatus,
                    request_deserializer=voice__service__pb2.Empty.FromString,
                    response_serializer=voice__service__pb2.StatusUpdate.SerializeToString,
            ),
            'SubscribeTextMessages': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeTextMessages,
                    request_deserializer=voice__service__pb2.Empty.FromString,
                    response_serializer=voice__service__pb2.TextMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'voice.VoiceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('voice.VoiceService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class VoiceService(object):
    """语音服务定义
    """

    @staticmethod
    def StartRecording(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/voice.VoiceService/StartRecording',
            voice__service__pb2.Empty.SerializeToString,
            voice__service__pb2.RecordingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StopRecording(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/voice.VoiceService/StopRecording',
            voice__service__pb2.Empty.SerializeToString,
            voice__service__pb2.RecordingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/voice.VoiceService/GetStatus',
            voice__service__pb2.Empty.SerializeToString,
            voice__service__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/voice.VoiceService/SubscribeStatus',
            voice__service__pb2.Empty.SerializeToString,
            voice__service__pb2.StatusUpdate.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeTextMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/voice.VoiceService/SubscribeTextMessages',
            voice__service__pb2.Empty.SerializeToString,
            voice__service__pb2.TextMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
